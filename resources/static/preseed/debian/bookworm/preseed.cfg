# Localisation
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select de

# Time
d-i time/zone select Europe/Vienna
# HW clock set to UTC?
d-i clock-setup/utc boolean true
# Use NTP during install
clock-setup clock-setup/ntp boolean true
clock-setup clock-setup/ntp-server string ntp

# Mirror
#d-i mirror/country string manual
#d-i mirror/protocol string http
#d-i mirror/http/hostname string 192.168.10.250
#d-i mirror/http/directory string /debian
#d-i mirror/http/proxy string

# Only enable main
d-i apt-setup/non-free boolean false
d-i apt-setup/non-free-firmware boolean false
d-i apt-setup/contrib boolean false
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string 192.168.10.250

# Users
# Skip creation of a normal user account
d-i passwd/make-user boolean false
# Obviously this has an actual password hash here, in the real config
d-i passwd/root-password-crypted password some_crypted_password

# Base system install
d-i base-installer/kernel/image select linux-image-amd64

# Package selection
# No 'task' selections
tasksel tasksel/first multiselect

# Don't partake in the popularity contest
popularity-contest popularity-contest/participate boolean false

# Bootloader
# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

######################
### CUSTOM SCRIPTS ###

# Run late-script if there is any loaded
d-i preseed/late_command string       \
  if [ -f /tmp/late-command-script ]; \
  then                                \
    /bin/sh /tmp/late-command-script; \
  fi;

# Run early-script if there is any loaded
d-i preseed/early_command string       \
  if [ -f /tmp/early-command-script ]; \
  then                                 \
    /bin/sh /tmp/early-command-script; \
  fi;

# Load scripts
d-i preseed/include_command string                                  \
  for file in                                                       \
    preseed-script-headers                                          \
    preseed-ssh-setup                                               \
  ; do                                                              \
    wget -P /tmp $( dirname $( debconf-get preseed/url ) )/$file && \
    chmod 500 /tmp/$file &&                                         \
    /tmp/$file;                                                     \
  done;

######################
###  Partitioning  ###

d-i partman-auto/method string crypto
d-i partman-partitioning/confirm_write_new_label boolean true
# Skip doing a full erase on underlying crypto volumes
d-i partman-auto-crypto/erase_disks boolean false
d-i partman-auto-lvm/guided_size string max
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto/expert_recipe string \
  lah_local_scheme ::                 \
    500 500 500 free                  \
      $iflabel{ gpt }                 \
      $reusmethod{ }                  \
      method{ efi }                   \
      format{ } .                     \
    500 500 500 ext4                  \
      $defaultignore{ }               \
      method{ format }                \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext4 }              \
      mountpoint{ /boot } .           \
    4000 4000 4000 linux-swap         \
      $lvmok{ }                       \
      $reusemethod{ }                 \
      method{ swap }                  \
      lv_name{ swap }                 \
      format{ } .                     \
    4000 4000 4000 ext4               \
      $lvmok{ }                       \
      method{ format }                \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext4 }              \
      mountpoint{ / } .               \
    1000 1000 1000 ext4               \
      $lvmok{ }                       \
      method{ format }                \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext4 }              \
      mountpoint{ /home } .           \
    1000 1000 1000 ext4               \
      $lvmok{ }                       \
      method{ format }                \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext4 }              \
      mountpoint{ /opt } .            \
    1000 1000 1000 ext4               \
      $lvmok{ }                       \
      method{ format }                \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext4 }              \
      mountpoint{ /srv } .            \
    4000 4000 4000 ext4               \
      $lvmok{ }                       \
      method{ format }                \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext4 }              \
      mountpoint{ /var } .            \
    4000 4000 4000 ext4               \
      $lvmok{ }                       \
      method{ format }                \
      format{ }                       \
      use_filesystem{ }               \
      filesystem{ ext4 }              \
      mountpoint{ /var/log } .


# Install Ansible to be able to run the bootstrap
# d-i pkgsel/include string ansible
# No wget inside the target, use the one in the installer environment.
# d-i preseed/late_command string \
#  wget -P /target/tmp http://debian-installer/bootstrap-playbook.yaml && \
#  in-target ansible-playbook /tmp/bootstrap-playbook.yaml;